name: Deploy to server

on:
  repository_dispatch:
    types: [deploy_event]
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 游닌 Checkout deployments
        uses: actions/checkout@v4
      - name: 游닌 Checkout backend
        uses: actions/checkout@v4
        with:
          repository: CompanyEventsMiniApp/backend
          path: backend
      - name: 游닌 Checkout telegram bot
        uses: actions/checkout@v4
        with:
          repository: CompanyEventsMiniApp/telegramBot
          path: telegramBot
      - name: 游닌 Checkout frontend
        uses: actions/checkout@v4
        with:
          repository: CompanyEventsMiniApp/frontend
          path: frontend
      - name: 游댏 Connect and deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            cd /home/deployer/deployments
            git pull origin main
            
            if [ ! -d "backend" ]; then
              git clone https://github.com/CompanyEventsMiniApp/backend.git backend
            else
              cd backend && git pull origin main && cd ..
            fi

            if [ ! -d "telegramBot" ]; then
              git clone https://github.com/CompanyEventsMiniApp/telegramBot.git telegramBot
            else
              cd telegramBot && git pull origin main && cd ..
            fi

            if [ ! -d "frontend" ]; then
              git clone https://github.com/CompanyEventsMiniApp/frontend.git frontend
            else
              cd frontend && git pull origin main && cd ..
            fi

            echo "BOT_TOKEN=${BOT_TOKEN}" > .env

            export DOCKER_BUILDKIT=1
            docker-compose down
            docker-compose up --build -d
